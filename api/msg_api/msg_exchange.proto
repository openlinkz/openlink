syntax = "proto3";

package api.msg.api;

option go_package = "github.com/openlinkz/openlink/api/msg_api";

import "api/protocol/protocol.proto";
import "google/api/annotations.proto";

service MsgExchangeService {
  rpc SendMsg(Msg) returns (SendMsgReply){
    option(google.api.http) = {
      post: "/exchange/send_message",
      body: "*"
    };
  }
  rpc Connect(ConnectRequest) returns (ConnectReply) {
    option(google.api.http) = {
      post: "/exchange/user_connect",
      body: "*"
    };
  }
  rpc Disconnect(DisconnectRequest) returns (DisconnectReply) {
    option(google.api.http) = {
      post: "/exchange/user_disconnect",
      body: "*"
    };
  }
  rpc KeepAlive(KeepAliveRequest) returns (KeepAliveReply) {
    option(google.api.http) = {
      post: "/exchange/user_keepalive",
      body: "*"
    };
  }
}

message Msg {
  string server = 1;
  string SID = 2;
  string UID = 3;
  protocol.Platform platform = 4;
  msg.protocol.Protocol protocol = 5;
}

message UserConnectionInfo {}

message SendMsgReply {}

message ConnectRequest {
  string server = 1;
  string SID = 2;
  string UID = 3;
  protocol.Platform platform = 4;
}

message ConnectReply {}

message DisconnectRequest {
  string server = 1;
  string SID = 2;
  string UID = 3;
  protocol.Platform platform = 4;
}

message DisconnectReply {}

message KeepAliveRequest {
  string server = 1;
  string SID = 2;
  string UID = 3;
  protocol.Platform platform = 4;
}

message KeepAliveReply {
  bool exists = 1;
}

